@startuml Get All Rooms (GET)

header CoWorking Sequence Diagram
footer Page %page% of %lastpage%
title "Get All Rooms (GET)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server

participant "<<router>>\n:coWorkingRouter" as coWorkingRouter
participant "<<router>>\n:roomRouter" as roomRouter
participant "<<middleware>>\n:validateQueryParams" as middleware
participant "<<controllers>>\n:roomController" as roomController
participant "<<model>>\n:Room" as roomModel
participant "<<model>>\n:Coworking" as coWorkingModel
database "<<PostgreSQL>>\n:room" as roomDatabase
database "<<PostgreSQL>>\n:coworking" as coWorkingDatabase
participant "<<service>>\n:class-transformer" as classTransformer
participant "<<service>>\n:class-validator" as classValidator

alt access from /api/v1/rooms
client->server ++:req.get('/api/v1/rooms')
server->roomRouter ++:app.use('/api/v1/rooms',roomRouter)
else access from /api/v1/coworkings/:coworking_id/rooms
client->server :req.get('/api/v1/coworkings/:coworking_id/rooms')
server->coWorkingRouter ++:app.use('/api/v1/coworkings',coWorkingRouter)
coWorkingRouter->roomRouter --: router.use('/:coworking_id/rooms',roomRouter)
end

roomRouter -> middleware ++: validateQueryParams(GetAllRoomDTO)
middleware -> classTransformer ++: plainToInstance(GetAllRoomDTO, req.query)
classTransformer -> middleware --: dto
middleware -> classValidator ++: validateDto(dto)
classValidator --> middleware --: errorMessages
middleware --> roomRouter --: next()

roomRouter -> roomController ++:getAllRooms()

roomController->classTransformer ++: plainToInstance(GetAllRoomDTO, req.query)
classTransformer -> roomController --: getAllRoomDTO
alt access from /api/v1/coworkings/:coworking_id/rooms
    roomController -> coWorkingModel ++: getCoWorkingById(req.params.coworking_id)
    coWorkingModel -> coWorkingDatabase ++: query using coworking_id
    coWorkingDatabase --> coWorkingModel --: queryResult
    coWorkingModel --> roomController --: coworkingExists 
    roomController -> roomModel ++: getAllRooms(getAllRoomDTO, req.params.coworking_id)
else access from /api/v1/rooms
    roomController -> roomModel : getAllRooms(getAllRoomDTO)
end
roomModel -> roomDatabase ++: query using getAllRoomDTO
roomDatabase --> roomModel --: rooms
roomModel --> roomController --: rooms
roomController -> client --: response

@enduml