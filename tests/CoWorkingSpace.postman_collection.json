{
	"info": {
		"_postman_id": "27a9ec48-f0c5-4f72-a0bb-a10bef6b058f",
		"name": "CoWorkingSpace",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41338379"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"Response should include correct user\", function () {",
									"    pm.expect(resJson.data).have.property(\"email\", \"user1@gmail.com\");",
									"});",
									"",
									"pm.test(\"Response should include token\", function () {",
									"    pm.expect(resJson.token).to.not.be.undefined;",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    pm.execution.setNextRequest(\"Register Duplicated User\");",
									"    pm.environment.set(\"USER_TOKEN\", resJson.token);",
									"} else {",
									"    pm.execution.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user1\",\n    \"phone\": \"+66 912345678\",\n    \"email\": \"user1@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Duplicated User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.execution.setNextRequest(\"Register with Bad Body\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"duplicated user1\",\n    \"phone\": \"+66 912345678\",\n    \"email\": \"user1@gmail.com\",\n    \"password\": \"654321\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Bad Body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"Response should include warning messages\", function () {",
									"    pm.expect(resJson.msg).to.have.length(4);",
									"});",
									"",
									"pm.execution.setNextRequest(\"Login as User\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user1%$^*\",\n    \"phone\": \"03984\",\n    \"email\": \"user1gmail.com\",\n    \"password\": \"111\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code should be 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"User role should be 'user'\", function () {",
									"    pm.expect(resJson.data).have.property(\"role\", \"user\");",
									"});",
									"",
									"pm.test(\"Response should include token\", function () {",
									"    pm.expect(resJson.token).to.not.be.undefined;",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    pm.execution.setNextRequest(\"Login as Admin\");",
									"    pm.environment.set(\"USER_TOKEN\", resJson.token);",
									"} else {",
									"    pm.execution.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user1@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code should be 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"User role should be 'admin'\", function () {",
									"    pm.expect(resJson.data).have.property(\"role\", \"admin\");",
									"});",
									"",
									"pm.test(\"Response should include token\", function () {",
									"    pm.expect(resJson.token).to.not.be.undefined;",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    pm.execution.setNextRequest(\"Login with Incorrect Credetial\");",
									"    pm.environment.set(\"ADMIN_TOKEN\", resJson.token);",
									"} else {",
									"    pm.execution.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin1@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with Incorrect Credetial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code should be 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.execution.setNextRequest(\"Logout\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user1@gmail.com\",\n    \"password\": \"111111\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token in cookies should be 'null'\", function () {",
									"    const cookies = pm.cookies.toObject();",
									"    pm.expect(cookies).to.have.property(\"token\");",
									"    pm.expect(cookies.token).to.eql(\"null\");",
									"});",
									"",
									"// pm.environment.set(\"TOKEN\", \"null\");",
									"",
									"pm.execution.setNextRequest(\"(Post) Delete user1\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "(Post) Delete user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", \"null\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "(Pre) Register user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resJson = pm.response.json();",
									"if (pm.response.code === 201) {",
									"    pm.execution.setNextRequest(\"(Pre) Register user5\");",
									"    pm.environment.set(\"USER_TOKEN\", resJson.token);",
									"} else {",
									"    pm.execution.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user1\",\n    \"phone\": \"+66 911111111\",\n    \"email\": \"user1@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "(Pre) Register user5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resJson = pm.response.json();",
									"if (pm.response.code === 201) {",
									"    pm.execution.setNextRequest(\"(Pre) Login as user1\");",
									"    pm.environment.set(\"USER5_ID\", resJson.data.id);",
									"} else {",
									"    pm.execution.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user5\",\n    \"phone\": \"+66 955555555\",\n    \"email\": \"user5@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "(Pre) Login as user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resJson = pm.response.json();",
									"if (pm.response.code === 201) {",
									"    pm.execution.setNextRequest(\"(Pre) Login as Admin\");",
									"    pm.environment.set(\"USER_TOKEN\", resJson.token);",
									"} else {",
									"    pm.execution.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user1@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "(Pre) Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resJson = pm.response.json();",
									"if (pm.response.code === 201) {",
									"    pm.execution.setNextRequest(\"Get Me\");",
									"    pm.environment.set(\"ADMIN_TOKEN\", resJson.token);",
									"} else {",
									"    pm.execution.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin1@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"Response should include correct user\", function () {",
									"    pm.expect(resJson.data).have.property(\"email\", \"user1@gmail.com\");",
									"});",
									"",
									"pm.execution.setNextRequest(\"Get One User by Admin\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One User by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"Response should include correct user\", function () {",
									"    pm.expect(resJson.data).to.have.property(\"email\", \"user4@gmail.com\");",
									"});",
									"",
									"pm.execution.setNextRequest(\"Get One User by User\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One User by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.execution.setNextRequest(\"Get All Users by Admin\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"Response should include 7 users\", function () {",
									"    pm.expect(resJson.data).to.have.length(7);",
									"});",
									"",
									"pm.execution.setNextRequest(\"Get All Users by User\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "role",
									"value": "",
									"disabled": true
								},
								{
									"key": "created_after",
									"value": "",
									"disabled": true
								},
								{
									"key": "created_before",
									"value": "",
									"disabled": true
								},
								{
									"key": "updated_after",
									"value": "",
									"disabled": true
								},
								{
									"key": "updated_before",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.execution.setNextRequest(\"Update Me by User\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "role",
									"value": "",
									"disabled": true
								},
								{
									"key": "created_after",
									"value": "",
									"disabled": true
								},
								{
									"key": "created_before",
									"value": "",
									"disabled": true
								},
								{
									"key": "updated_after",
									"value": "",
									"disabled": true
								},
								{
									"key": "updated_before",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Me by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"Response should include updated user\", function () {",
									"    pm.expect(resJson.data).to.have.property(\"name\", \"Updated User1\")",
									"    pm.expect(resJson.data).to.have.property(\"phone\", \"+66 911111112\")",
									"});",
									"",
									"pm.execution.setNextRequest(\"Update Me by Admin\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated User1\",\n    \"phone\": \"+66 911111112\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Me by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.execution.setNextRequest(\"Delete Me by User\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated User1\",\n    \"phone\": \"+66 911111112\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Me by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"Reponse data should be empty\", function () {",
									"    pm.expect(resJson.data).to.deep.equal({});",
									"});",
									"",
									"pm.execution.setNextRequest(\"Delete Me by Admid\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Me by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.execution.setNextRequest(\"Delete One User by Admin\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete One User by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const resJson = pm.response.json();",
									"pm.test(\"Reponse data should be empty\", function () {",
									"    pm.expect(resJson.data).to.deep.equal({});",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{USER5_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete One User by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{USER5_ID}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "USER_TOKEN",
			"value": "",
			"type": "string"
		},
		{
			"key": "ADMIN_TOKEN",
			"value": "",
			"type": "string"
		}
	]
}